library('forecast')
require('vars')
require('CombMSC')
library('VAR.etp')
require('MLmetrics')
#initialize data
z = read.csv('prices.csv',header=TRUE)
sf = ts(z$SF,start=c(2000,1),freq=12)
sc = ts(z$SC,start=c(2000,1),freq=12)
#growth transformation
sf = diff(sf)
sc = diff(sc)
#create a prediction sample and estimation sample
sfp=window(sf,start=c(2017,8),freq=12)
scp=window(sc,start=c(2017,8),freq=12)
sf=window(sf,start=c(2000,1),end=c(2017,7),freq=12)
sc=window(sc,start=c(2000,1),end=c(2017,7),freq=12)
tsdisplay(sf,main="Price growth in San Francisco-Oakland-Hayward")
tsdisplay(sc,main="Price growth in Snata Cruz-Watsonville")
ccf(sf,sc)
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot((m1))
par("mar")
par(mar=c(1,1,1,1))
par("mar")
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
par(mar=c(1,1,1,1))
plot((m1))
summary(m1)
Box.test(m1$varresult$sf$residuals)
Box.test(m1$varresult$sc$residuals)
install.packages("MLmetrics")
par(mar=c(1,1,1,1))
y = cbind(sf,sc)
library('forecast')
require('vars')
require('CombMSC')
library('VAR.etp')
require('MLmetrics')
#initialize data
z = read.csv('prices.csv',header=TRUE)
sf = ts(z$SF,start=c(2000,1),freq=12)
sc = ts(z$SC,start=c(2000,1),freq=12)
#growth transformation
sf = diff(sf)
sc = diff(sc)
#create a prediction sample and estimation sample
sfp=window(sf,start=c(2017,8),freq=12)
scp=window(sc,start=c(2017,8),freq=12)
sf=window(sf,start=c(2000,1),end=c(2017,7),freq=12)
sc=window(sc,start=c(2000,1),end=c(2017,7),freq=12)
tsdisplay(sf,main="Price growth in San Francisco-Oakland-Hayward")
tsdisplay(sc,main="Price growth in Snata Cruz-Watsonville")
ccf(sf,sc)
par(mar=c(1,1,1,1))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot((m1))
par(mar=c(1,1,1,1))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot((m1))
par(mar=c(1,1,1,1))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
par(mar=c(1,1,1,1))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
#par(mar=c(1,1,1,1))
par(mar=rep(2,4))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
plot(m1)
#par(mar=c(1,1,1,1))
par(mar=rep(2,4))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
summary(m1)
Box.test(m1$varresult$sf$residuals)
Box.test(m1$varresult$sc$residuals)
par("mar")
par(mar=c(1,1,1,1))
par(mar=rep(2,4))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
summary(m1)
Box.test(m1$varresult$sf$residuals)
Box.test(m1$varresult$sc$residuals)
unlink('main_cache', recursive = TRUE)
par(mar=c(1,1,1,1))
par(mar=rep(4,4))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
par(mar=c(1,1,1,1))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
par(mar=c(1,1,1,1))
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
plot(m1)
y = cbind(sf,sc)
y_tot = data.frame(y)
bestP = VAR.select(y_tot,ic="sc",pmax=20)
bestP = as.numeric(bestP$p)#==>5
m1 = VAR(y_tot,p=5)
par(mar=c(1,1,1,1))
plot(m1)
